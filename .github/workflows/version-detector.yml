name: Version Change Detector

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  check-version-change:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para comparar commits

      - name: Detectar cambios en versión de build.gradle
        id: version-check
        run: |
          echo "🔍 Verificando cambios en la versión..."
          
          # Obtener la versión actual
          CURRENT_VERSION=$(grep "^version = " build.gradle | sed "s/version = '\(.*\)'/\1/" | tr -d '"')
          echo "📦 Versión actual: $CURRENT_VERSION"
          
          # Si es un PR, comparar con la rama base
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PREVIOUS_VERSION=$(git show origin/${{ github.base_ref }}:build.gradle | grep "^version = " | sed "s/version = '\(.*\)'/\1/" | tr -d '"')
            echo "📦 Versión anterior (base): $PREVIOUS_VERSION"
          else
            # Si es un push, comparar con el commit anterior
            if [ "$(git rev-list --count HEAD)" -gt 1 ]; then
              PREVIOUS_VERSION=$(git show HEAD~1:build.gradle | grep "^version = " | sed "s/version = '\(.*\)'/\1/" | tr -d '"')
              echo "📦 Versión anterior: $PREVIOUS_VERSION"
            else
              echo "⚠️ Es el primer commit, no hay versión anterior para comparar"
              PREVIOUS_VERSION=""
            fi
          fi
          
          # Comparar versiones
          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ] && [ -n "$PREVIOUS_VERSION" ]; then
            echo "✅ ¡Cambio de versión detectado!"
            echo "   Anterior: $PREVIOUS_VERSION"
            echo "   Nueva: $CURRENT_VERSION"
            echo "version-changed=true" >> $GITHUB_OUTPUT
            echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "previous-version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
          else
            echo "❌ No se detectaron cambios en la versión"
            echo "version-changed=false" >> $GITHUB_OUTPUT
            echo "current-version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
            echo "previous-version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
          fi

  trigger-builds:
    needs: check-version-change
    if: needs.check-version-change.outputs.version-changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Trigger workflow de builds
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'build-on-version-change.yml',
              ref: context.ref
            });
            
            console.log('🚀 Workflow de builds iniciado automáticamente');
            console.log('📦 Nueva versión:', '${{ needs.check-version-change.outputs.current-version }}');

      - name: Comentar en PR (si aplica)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🚀 Cambio de versión detectado
              
              **Versión anterior:** \`${{ needs.check-version-change.outputs.previous-version }}\`
              **Versión nueva:** \`${{ needs.check-version-change.outputs.current-version }}\`
              
              Se han iniciado automáticamente los builds para:
              - ✅ Backend (Java/Spring Boot)
              - ✅ Desktop (Electron)  
              - ✅ Android (Capacitor)
              
              Los artefactos estarán disponibles cuando se complete el build.`
            });

  report-no-change:
    needs: check-version-change
    if: needs.check-version-change.outputs.version-changed == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Reportar sin cambios
        run: |
          echo "ℹ️ No se detectaron cambios en la versión"
          echo "📦 Versión actual: ${{ needs.check-version-change.outputs.current-version }}"
          echo "🔄 No se ejecutarán builds automáticos"
